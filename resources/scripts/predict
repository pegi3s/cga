#!/bin/bash

version_emboss=${version_emboss:-latest}
version_blast=${version_blast:-latest}
version_utilities=${version_utilities:-latest}

set -o nounset
set -o errexit

WORKING_DIR=$1
HOST_WORKING_DIR=$2
REFERENCE=$3
FILE_NAME=$4
MIN_FULL_PROTEIN_SIZE=$5

FILE_DIR=${WORKING_DIR}/cga_working_dir/${FILE_NAME}
HOST_FILE_DIR=${HOST_WORKING_DIR}/cga_working_dir/${FILE_NAME}

JOIN_EXONS_RESULTS=04_${FILE_NAME}.join_exons_results

echo "5. Predicting CDS and proteins (${FILE_NAME})"

cd ${FILE_DIR}

mkdir -p ${FILE_DIR}/tmp

cp ${WORKING_DIR}/${REFERENCE} tmp/${REFERENCE}

if test -f "${JOIN_EXONS_RESULTS}"; then
	docker run --rm \
		-v ${HOST_FILE_DIR}:/data \
		pegi3s/emboss:${version_emboss} \
			transeq \
				-sequence /data/${JOIN_EXONS_RESULTS} -frame 1 -outseq /data/tmp/tmp1

	docker run --rm \
		-v ${HOST_FILE_DIR}:/data \
		pegi3s/emboss:${version_emboss} \
			getorf \
				-sequence /data/${JOIN_EXONS_RESULTS} \
				-outseq /data/tmp/tmp2 \
				-find 3 -reverse no -minsize ${MIN_FULL_PROTEIN_SIZE}

	if test -s "tmp/tmp2"; then
		docker run --rm \
			-v ${HOST_FILE_DIR}:/data \
				pegi3s/emboss:${version_emboss} \
					transeq \
						-sequence /data/tmp/tmp2 -frame 1 -outseq /data/tmp/tmp3

		if test -s "tmp/tmp3"; then
			docker run --rm \
				-v ${HOST_FILE_DIR}:/data \
				-v /var/run/docker.sock:/var/run/docker.sock \
				pegi3s/utilities:${version_utilities} \
					batch_fasta_remove_line_breaks /data/tmp/tmp1 /data/tmp/tmp2 /data/tmp/tmp3

			rm -f 05_${FILE_NAME}.pep 05_${FILE_NAME}.nuc
			touch 05_${FILE_NAME}.pep 05_${FILE_NAME}.nuc
			
			while read header; do
				read sequence
				a=$(echo $header | cut -f1,2 -d '[' | sed 's/>//g; s/_1 $//g')
				if grep -q $sequence tmp/tmp1; then
					grep -A1 -F "$a" tmp/tmp2 >> 05_${FILE_NAME}.nuc
					grep -A1 -F "$a" tmp/tmp3 >> 05_${FILE_NAME}.pep
				fi
			done < tmp/tmp3

			sed 's/_/ /g' 05_${FILE_NAME}.pep > tmp/05_${FILE_NAME}.pep.tmp
			
			docker run --rm \
				-v ${HOST_FILE_DIR}:/data \
				pegi3s/blast:${version_blast} \
					makeblastdb -in /data/tmp/05_${FILE_NAME}.pep.tmp -dbtype prot -parse_seqids

			rm tmp/05_${FILE_NAME}.pep.tmp

			docker run --rm \
				-v ${HOST_FILE_DIR}:/data \
				pegi3s/blast:${version_blast} \
					blastp \
						-query /data/tmp/${REFERENCE} \
						-db /data/tmp/05_${FILE_NAME}.pep.tmp \
						-evalue 0.05 \
						-num_descriptions 500000 \
						-num_alignments 500000 \
						-outfmt 3 \
						-out /data/05_${FILE_NAME}.pep.blast

			rm tmp/05_${FILE_NAME}.pep.tmp.*
		fi
	fi
fi

if test -f "05_${FILE_NAME}.nuc"; then
	sed -i 's/ /_/g; s/_$//g' 05_${FILE_NAME}.pep
	sed -i 's/ /_/g; s/_$//g' 05_${FILE_NAME}.nuc
fi

keep_temporary_files=${keep_temporary_files:-"no"}
if [ "${keep_temporary_files}" == "no" ]; then
	rm -f tmp/${REFERENCE} tmp/tmp1 tmp/tmp2 tmp/tmp3
fi
