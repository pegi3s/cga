#!/bin/bash

version_emboss=${version_emboss:-latest}

set -o nounset
set -o errexit

INPUT_FILE=$1 # ${INPUT_FILE}.results.pep
INPUT_REFERENCE=$2
CHOICE=$3
CORRECTION=$4
HOST_INPUT_FILES_DIR=$5
INPUT_FILES_DIR=$(dirname ${INPUT_FILE})

keep_temporary_files=${keep_temporary_files:-"no"}

function assign_and_move {
	b=$a
	d=$c
	touch final_selection_tmp3
	rm final_selection_tmp3 && mv final_selection_tmp1 final_selection_tmp3
}

b=0
d=1000000

cd ${INPUT_FILES_DIR}

pname=$(head -1 ${INPUT_FILE})

while read name; do
	read seq
	if [ "$name" = "$pname" ]; then
		echo $name > final_selection_tmp1
		echo $seq >> final_selection_tmp1

		docker run --rm \
			-v ${HOST_INPUT_FILES_DIR}:/data \
			pegi3s/emboss:${version_emboss} \
				stretcher \
					-sprotein1 /data/final_selection_tmp1 \
					-sprotein2 /data/${INPUT_REFERENCE} \
					-outfile /data/final_selection_tmp2

		if [ ! -f final_selection_tmp2 ]; then
			touch final_selection_tmp2
   			a=0
			c=1000000
		else
			a=$(grep 'Similarity:' final_selection_tmp2 | cut -f2 -d'(' | sed 's/)//g; s/\%//g; s/\.//g; s/ //g; s/^0//g') ######
			c=$(grep 'Gaps:' final_selection_tmp2 | cut -f2 -d'(' | sed 's/)//g; s/\%//g; s/\.//g; s/ //g; s/^0//g') ######
		fi

		if [ "${CHOICE}" -eq "1" ]; then
			if [ "$a" -gt "$b" ] || ([ "$a" -eq "$b" ] && [ "$c" -lt "$d" ]); then
				assign_and_move
			fi
		fi

		if [ "${CHOICE}" -eq "2" ]; then
			if [ "$c" -lt "$d" ] || ([ "$c" -eq "$d" ] && [ "$a" -gt "$b" ]); then
				assign_and_move
			fi
		fi

		if [ "${CHOICE}" -eq "3" ]; then
			if [ "$c" -le "$d" ]; then
				na=$(( $a + ${CORRECTION} ))
			else
				na=$(( $a - ${CORRECTION} ))
			fi

			if [ "$na" -gt "$b" ]; then
				assign_and_move
			fi
		fi
	else	
		pname=$name
		b=0
		d=1000000
		touch final_selection_tmp2 final_selection_tmp3 final_selection_tmp4
		cat final_selection_tmp4 final_selection_tmp3 > final_selection_tmp5
		if [ "${keep_temporary_files}" == "no" ]; then
			rm final_selection_tmp3 final_selection_tmp4
		fi
		mv final_selection_tmp5 final_selection_tmp4		
	fi
	if [ "${keep_temporary_files}" == "no" ]; then
		rm final_selection_tmp2
	fi
done < ${INPUT_FILE}

touch final_selection_tmp3 final_selection_tmp4
cat final_selection_tmp4 final_selection_tmp3 > ${INPUT_FILE}.selection

if [ "${keep_temporary_files}" == "no" ]; then
	rm -f final_selection_tmp*
fi
